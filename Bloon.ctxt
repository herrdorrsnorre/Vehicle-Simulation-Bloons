#BlueJ class context
comment0.target=Bloon
comment0.text=\r\n\ Base\ abstract\ class\ representing\ a\ Bloon\ (enemy)\ in\ the\ game.\r\n\ <p>\r\n\ A\ {@code\ Bloon}\ moves\ horizontally\ along\ a\ lane,\ can\ take\ and\ respond\ to\ various\r\n\ types\ of\ {@link\ DamageType}\ damage,\ and\ may\ spawn\ child\ bloons\ when\ popped.\r\n\ Bloons\ can\ freeze,\ change\ lanes\ to\ avoid\ slower\ traffic,\ and\ deal\ contact\r\n\ damage\ to\ monkeys.\r\n\ </p>\r\n\r\n\ <p>Key\ features\:</p>\r\n\ <ul>\r\n\ \ \ <li>Supports\ multiple\ damage\ immunities\ and\ temporary\ freeze\ effects.</li>\r\n\ \ \ <li>Handles\ lane-following\ and\ lane-changing\ traffic\ logic.</li>\r\n\ \ \ <li>Spawns\ child\ bloons\ when\ popped.</li>\r\n\ \ \ <li>Can\ temporarily\ harm\ monkeys\ on\ contact\ with\ cooldowns.</li>\r\n\ </ul>\r\n
comment1.params=speed\ health\ direction\ laneY\ nextTier
comment1.target=Bloon(double,\ int,\ int,\ int,\ java.lang.Class)
comment1.text=\r\n\ Constructs\ a\ new\ {@code\ Bloon}\ instance.\r\n\r\n\ @param\ speed\ \ \ \ \ movement\ speed\ in\ pixels\ per\ frame\r\n\ @param\ health\ \ \ \ starting\ health\ of\ the\ bloon\r\n\ @param\ direction\ travel\ direction\ ({@code\ 1\ \=\ right},\ {@code\ -1\ \=\ left})\r\n\ @param\ laneY\ \ \ \ \ vertical\ lane\ position\r\n\ @param\ nextTier\ \ the\ next-tier\ bloon\ class\ to\ spawn\ upon\ popping\r\n
comment10.params=
comment10.target=void\ updateImageDirection()
comment10.text=\r\n\ Restores\ the\ correct\ image\ orientation\ after\ thawing\ or\ direction\ change.\r\n
comment11.params=newDirection
comment11.target=void\ setDirection(int)
comment11.text=\r\n\ Sets\ the\ bloon's\ travel\ direction\ and\ updates\ its\ image\ accordingly.\r\n\r\n\ @param\ newDirection\ the\ new\ direction\ ({@code\ 1\ \=\ right},\ {@code\ -1\ \=\ left})\r\n
comment12.params=
comment12.target=void\ handleTrafficLogic()
comment12.text=\r\n\ Handles\ lane-following\ and\ lane-changing\ behavior\ when\ blocked.\r\n
comment13.params=distance
comment13.target=Bloon\ getBloonAhead(int)
comment13.text=\r\n\ Returns\ the\ bloon\ directly\ ahead\ within\ a\ given\ look-ahead\ distance.\r\n\r\n\ @param\ distance\ distance\ ahead\ to\ check\r\n\ @return\ the\ bloon\ detected\ ahead,\ or\ {@code\ null}\ if\ none\ found\r\n
comment14.params=
comment14.target=void\ tryLaneChange()
comment14.text=\r\n\ Attempts\ to\ change\ lanes\ to\ avoid\ slower\ traffic.\r\n
comment15.params=base
comment15.target=greenfoot.GreenfootImage\ makeFrozenCopy(greenfoot.GreenfootImage)
comment15.text=\r\n\ Creates\ an\ icy-blue\ copy\ of\ a\ given\ image\ to\ visually\ represent\ a\ frozen\ bloon.\r\n\r\n\ @param\ base\ the\ base\ image\ to\ modify\r\n\ @return\ a\ new\ frozen-tinted\ {@link\ GreenfootImage}\r\n
comment16.params=type\ active
comment16.target=void\ setTemporaryImmunity(DamageType,\ boolean)
comment16.text=\r\n\ Assigns\ or\ removes\ a\ temporary\ immunity\ to\ this\ bloon.\r\n\r\n\ @param\ type\ \ \ the\ damage\ type\ to\ modify\r\n\ @param\ active\ {@code\ true}\ to\ enable\ immunity,\ {@code\ false}\ to\ disable\ it\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Main\ update\ method\ \u2014\ called\ once\ per\ frame.\r\n\ Handles\ freezing,\ movement,\ lane\ logic,\ collisions,\ and\ cleanup.\r\n
comment3.params=dmg\ type
comment3.target=void\ takeDamage(int,\ DamageType)
comment3.text=\r\n\ Applies\ damage\ to\ this\ bloon\ based\ on\ the\ damage\ type.\r\n\r\n\ @param\ dmg\ \ the\ amount\ of\ damage\r\n\ @param\ type\ the\ {@link\ DamageType}\ applied\r\n
comment4.params=
comment4.target=void\ pop()
comment4.text=\r\n\ Handles\ what\ happens\ when\ a\ bloon\ is\ destroyed\ (popped).\r\n\ <p>\r\n\ -\ Spawns\ its\ child\ tier\ (if\ any).<br>\r\n\ -\ Transfers\ freeze\ effects\ if\ applicable.<br>\r\n\ -\ Plays\ pop\ visual\ effect\ and\ removes\ this\ object.\r\n\ </p>\r\n
comment5.params=
comment5.target=java.lang.Class\ getChildTier()
comment5.text=\r\n\ Returns\ the\ next-tier\ bloon\ type\ that\ should\ spawn\ when\ this\ one\ pops.\r\n\ Subclasses\ override\ this\ to\ define\ their\ child\ type.\r\n\r\n\ @return\ the\ class\ of\ the\ next-tier\ bloon,\ or\ {@code\ null}\ if\ none\r\n
comment6.params=
comment6.target=void\ checkCollisionWithMonkey()
comment6.text=\r\n\ Checks\ and\ applies\ contact\ damage\ to\ monkeys.\r\n
comment7.params=
comment7.target=void\ checkOutOfBounds()
comment7.text=\r\n\ Removes\ the\ bloon\ if\ it\ travels\ out\ of\ world\ bounds.\r\n
comment8.params=type
comment8.target=boolean\ isImmuneTo(DamageType)
comment8.text=\r\n\ Checks\ whether\ this\ bloon\ is\ immune\ to\ a\ given\ damage\ type.\r\n\r\n\ @param\ type\ the\ damage\ type\ to\ test\r\n\ @return\ {@code\ true}\ if\ this\ bloon\ is\ immune;\ {@code\ false}\ otherwise\r\n
comment9.params=duration
comment9.target=void\ applyFreeze(int)
comment9.text=\r\n\ Freezes\ this\ bloon\ for\ a\ given\ duration.\r\n\r\n\ @param\ duration\ freeze\ duration\ in\ frames\r\n
numComments=17
