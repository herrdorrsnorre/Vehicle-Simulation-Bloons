#BlueJ class context
comment0.target=BloonWorld
comment0.text=\r\n\ The\ {@code\ BloonWorld}\ class\ represents\ the\ main\ simulation\ environment\ for\ the\ Bloons-style\ game.\r\n\ <p>\r\n\ It\ manages\:\r\n\ <ul>\r\n\ \ \ <li>Bloon\ spawning\ logic\ (normal\ and\ MOAB)</li>\r\n\ \ \ <li>Monkey\ spawning\ logic\ and\ timing</li>\r\n\ \ \ <li>Lane\ preparation\ and\ visual\ rendering</li>\r\n\ \ \ <li>Development\ testing\ tools\ (dev\ mode)</li>\r\n\ \ \ <li>Random\ global\ effects\ (e.g.\ Ice\ Blast)</li>\r\n\ \ \ <li>Z-sorting\ of\ actors\ for\ proper\ depth\ rendering</li>\r\n\ </ul>\r\n\r\n\ This\ class\ extends\ {@link\ World}\ and\ serves\ as\ the\ core\ game\ world\ where\ all\r\n\ gameplay\ and\ simulation\ activity\ occurs.\r\n
comment1.params=
comment1.target=BloonWorld()
comment1.text=\r\n\ Constructs\ the\ {@code\ BloonWorld},\ initializes\ the\ background,\r\n\ prepares\ lane\ and\ sidewalk\ graphics,\ and\ sets\ up\ spawners.\r\n
comment10.params=
comment10.target=int[]\ getLanePositions()
comment10.text=@return\ Y-coordinates\ of\ all\ lane\ centers
comment11.params=
comment11.target=void\ triggerRandomIceBlast()
comment11.text=\r\n\ Occasionally\ triggers\ a\ fullscreen\ {@link\ IceBlastEffect}.\r\n\ Controlled\ by\ a\ cooldown\ timer\ and\ low\ random\ chance.\r\n
comment2.params=bloonType1\ bloonType2\ monkeyType
comment2.target=void\ enableDevMode(java.lang.Class,\ java.lang.Class,\ java.lang.Class)
comment2.text=\r\n\ Enables\ developer\ mode,\ which\ spawns\ custom\ bloons\ and\ monkeys\ for\ testing.\r\n\r\n\ @param\ bloonType1\ first\ bloon\ class\ to\ spawn\r\n\ @param\ bloonType2\ second\ bloon\ class\ to\ spawn\r\n\ @param\ monkeyType\ monkey\ class\ to\ spawn\r\n
comment3.params=
comment3.target=void\ act()
comment3.text=\r\n\ Main\ update\ loop\ executed\ once\ per\ frame.\r\n\ Handles\ spawning,\ random\ events,\ and\ sorting.\r\n
comment4.params=
comment4.target=void\ spawnBloons()
comment4.text=\r\n\ Handles\ all\ bloon\ spawning\ logic,\ including\:\r\n\ <ul>\r\n\ \ \ <li>Developer\ test\ bloon\ spawning</li>\r\n\ \ \ <li>Normal\ bloon\ tier\ progression</li>\r\n\ \ \ <li>MOAB\ spawn\ frequency\ scaling</li>\r\n\ </ul>\r\n
comment5.params=
comment5.target=void\ spawnMonkeys()
comment5.text=\r\n\ Handles\ automatic\ spawning\ of\ monkeys\ at\ dynamic\ intervals.\r\n\ The\ spawn\ rate\ and\ type\ of\ monkey\ depend\ on\ the\ current\ simulation\ phase.\r\n
comment6.params=m
comment6.target=void\ addMonkey(Monkey)
comment6.text=\r\n\ Adds\ a\ monkey\ actor\ to\ the\ world\ at\ a\ random\ sidewalk\ spawn\ position.\r\n\ Monkeys\ traverse\ vertically\ across\ the\ map\ and\ despawn\ at\ the\ opposite\ sidewalk.\r\n\r\n\ @param\ m\ the\ monkey\ to\ add\r\n
comment7.params=world\ target\ spawners\ startY\ heightPerLane\ lanes\ spacing
comment7.target=int[]\ prepareLanes(greenfoot.World,\ greenfoot.GreenfootImage,\ BloonSpawner[],\ int,\ int,\ int,\ int)
comment7.text=\r\n\ Prepares\ and\ draws\ all\ lanes\ and\ sidewalks\ with\ visual\ texture.\r\n\r\n\ @param\ world\ \ \ \ \ \ \ \ \ reference\ to\ this\ {@link\ World}\r\n\ @param\ target\ \ \ \ \ \ \ \ target\ image\ to\ draw\ the\ lanes\ on\r\n\ @param\ spawners\ \ \ \ \ \ array\ to\ store\ lane\ {@link\ BloonSpawner}s\r\n\ @param\ startY\ \ \ \ \ \ \ \ Y-coordinate\ for\ the\ top\ of\ the\ first\ lane\r\n\ @param\ heightPerLane\ height\ of\ each\ lane\r\n\ @param\ lanes\ \ \ \ \ \ \ \ \ total\ number\ of\ lanes\r\n\ @param\ spacing\ \ \ \ \ \ \ pixel\ spacing\ between\ lanes\r\n\ @return\ array\ of\ Y-coordinates\ for\ each\ lane\ center\r\n
comment8.params=actorsToSort\ world
comment8.target=void\ zSort(java.util.ArrayList,\ greenfoot.World)
comment8.text=\r\n\ Z-sort\ so\ actors\ with\ higher\ Y\ (lower\ on\ screen)\ render\ in\ front.\r\n\ Uses\ precise\ Y\ for\ SuperSmoothMover\ when\ available.\ Stable\ for\ ties.\r\n
comment9.params=v
comment9.target=int\ roundAwayFromZero(double)
comment9.text=Helper\:\ symmetric\ rounding\ that\ rounds\ halves\ away\ from\ zero.
numComments=12
